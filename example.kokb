// This is a test file for the kokb language
// Testing basic commands and statements

// Print statement
print "Hello, kokb language!";


// Variable declarations and assignments
myInt = 10;
myFloat = 3.14;
myString = "test string";
myBool = true;

// Testing arithmetic operations
result = 10 + 5;
print result;

result = 10 - 5;
print result;

result = 10 * 5;
print result;

result = 10 / 5;
print result;

result = 10 ^ 2;  // power
print result;

result = 10 % 3;  // modulo
print result;

// Testing increment and decrement
counter = 1;
print counter;
counter++;
print counter;
counter--;
print counter;

// Testing comparison operators
isLess = 10 < 20;
print isLess;

isGreater = 15 > 20;
print isGreater;

isLessEqual = 10 <= 10;
print isLessEqual;

isGreaterEqual = 20 >= 20;
print isGreaterEqual;

isEqual = 15 == 15;
print isEqual;

isNotEqual = 10 != 20;
print isNotEqual;


// Testing operator precedence
precedenceTest = (10 + 5) * 2;
print precedenceTest;

// Testing blocks
{
    blockVar = 100;
    print "This is inside a block";
    print blockVar;
}

// Testing logical operators
condition1 = true;
condition2 = false;
andResult = condition1 && condition2;
print andResult;

orResult = condition1 || condition2;
print orResult;

notResult = !condition1;
print notResult;


// Testing if statement
testValue = 15;

if (testValue > 10) {
    print "testValue is greater than 10";
}

if (testValue < 10) {
    print "testValue is less than 10";
} else {
    print "testValue is not less than 10";
}



// Testing while loop
loopCounter = 0;
while (loopCounter < 5) {
    print "Loop iteration:";
    print loopCounter;
    loopCounter++;
}


// Testing function declarations and calls
function add(a, b) {
    return a + b;
}



// Function calls
result = add(10, 20);
print "Function result:";
print result;



// Recursive function
function factorial(n) {
    if (n <= 1) {
        return 1;
    }
    return n * factorial(n - 1);
}

factResult = factorial(5);
print "Factorial of 5:";
print factResult;

// Testing exception handling
try {
    // Division by zero would cause an error
    errorResult = 10 / 0;
    print errorResult;
} catch (error) {
    print "Error caught:";
    print error;
} 

// Exit command to terminate the program
exit;
